
video{
  width: 100vw;
}

body{
  background-color: black;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

img{
  object-fit: cover;
height: 100%;
}

.grid_background{
  position: absolute; /*Position absolute is required to have everything overlay on top of each other.*/
  margin: 0 auto;
  height: 100%;
  width: 100vw;
  display: grid;
  grid-template-columns: repeat(6, 6fr);
  grid-template-areas: "x1 x1 x1 x1 x1 x1" /*Basic grid template area. But the difference for this grid is I have made the same grid*/
                       "x1 x1 x1 x1 x1 x1" /*layout and size and put position absolute and arranged elements by the grid areas by*/
                       "x1 x1 x1 x1 x1 x1" /*positioning them in different places in CSS*/
                       "x2 x2 x2 x2 x2 x2"
                       "x2 x2 x2 x2 x2 x2"
                       "x2 x2 x2 x2 x2 x2"
                       ;
}

.side1{
  grid-area: x1;
  width: 100%; 
  height: 100%; 
  overflow: hidden; /*Overflow hidden keeps everything inside their elements and keeps everything nice and tidy.*/
  text-align: center;
  position: relative;
}

.side2{
  grid-area: x2;
  width: 100%; 
  height: 100%; 
  overflow: hidden;
  text-align: center;
  position: relative;

  
}

.grid_background2{
  z-index: -1;
  position: absolute;
  margin: 0 auto;
  height: 100%;
  width: 100vw;
  display: grid;
  grid-template-columns: repeat(6, 6fr);
  grid-template-areas: "x3 x3 x3 x3 x3 x3"
                       "x3 x3 x3 x3 x3 x3"
                       "x3 x3 x3 x3 x3 x3"
                       "x4 x4 x4 x4 x4 x4"
                       "x4 x4 x4 x4 x4 x4"
                       "x4 x4 x4 x4 x4 x4"
                       ;
}
/*Basic grid template area. But the difference for this grid is I have made the same grid*/
/*layout and size and put position absolute and arranged elements by the grid areas by*/
/*positioning them in different places in CSS*/

.side3{
  grid-area: x3;
  width: 100%; 
  height: 100%; 
  overflow: hidden;
  text-align: center;
  position: relative;
}

.side4{
  grid-area: x4;
  width: 100%; 
  height: 100%; 
  overflow: hidden;
  text-align: center;
  position: relative;
}


.grid_background3{
  z-index: -3;
  position: absolute;
  margin: 0 auto;
  width: 100vw;
  height: 100%;
  overflow: hidden;
}

.grid_background4{
  mix-blend-mode: lighten;
  opacity: 100%;
  z-index: -2;
  position: absolute;
  margin: 0 auto;
  height: 100%;
  width: 100vw;
  display: grid;
  grid-template-columns: repeat(6, 6fr);
  grid-template-areas: "x7 x7 x7 x7 x7 x7"
                       "x7 x7 x7 x7 x7 x7"
                       "x8 x8 x8 x8 x8 x8"
                       "x8 x8 x8 x8 x8 x8"
                       "x8 x8 x8 x8 x8 x8"
                       "x8 x8 x8 x8 x8 x8"
                       ;
}

/*Basic grid template area. But the difference for this grid is I have made the same grid*/
/*layout and size and put position absolute and arranged elements by the grid areas by*/
/*positioning them in different places in CSS*/

.side7{
  grid-area: x7;
  width: 100%; 
  height: 100%; 
  overflow: hidden;
  text-align: center;
  position: relative;
}

.side8{
  grid-area: x8;
  width: 100%; 
  height: 100%; 
  overflow: hidden;
  text-align: center;
  position: relative;
}

.tree{
  width: 100%;
}

.mountain{
  width: 100%;
}